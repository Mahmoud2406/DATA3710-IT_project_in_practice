{"version":3,"sources":["stores/UserStores.js","components/FancyComponents/CustomParticles.js","components/LayoutComponents/Header.js","components/LayoutComponents/Navigation.js","components/PageComponents/EditableLayer/Message.js","components/PageComponents/EditableLayer/Progress.js","components/PageComponents/EditableLayer/FileUpload.js","components/PageComponents/EditableLayer/PdfList.js","components/PageComponents/EditableLayer/OtherFilesList.js","components/PageComponents/EditableLayer/PageList.js","components/LayoutComponents/Sidebar.js","components/LayoutComponents/ScrollUp.js","components/LayoutComponents/Footer.js","components/PageComponents/EditableLayer/GeneratePdf.js","components/PageComponents/Editor/tools.js","components/PageComponents/Editor/Editor.js","components/PageComponents/items/AccessibleMobile.js","components/PageComponents/items/AccesibleDocuments.js","components/PageComponents/items/AccessibleWeb.js","components/PageComponents/items/AccessibleKiosk.js","components/LoginComponents/InputField.js","components/LoginComponents/LoginForm.js","components/PageComponents/Login.js","components/PageComponents/LawsAndRegulations.js","components/PageComponents/OnlineCourses.js","components/PageComponents/Home.js","components/PageComponents/AboutUs.js","components/PageComponents/Editor/EditorPages.js","components/PageComponents/Editor/EditorNewPage.js","components/PageComponents/EditableLayer/PdfViewer.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["extendObservable","this","loading","isLoggedIn","username","CustomParticles","style","width","height","position","params","React","Component","Header","className","Navigation","props","useState","isOpen","setIsOpen","toggle","doLogout","a","fetch","method","headers","res","json","result","success","localStorage","removeItem","window","location","reload","console","log","getItem","Navbar","color","light","expand","NavbarBrand","href","src","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","aria-hidden","Message","msg","show","setShow","role","display","type","data-dismiss","aria-label","Progress","percentage","FileUpload","file","setFile","filename","setFilename","name","setName","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onSubmit","e","preventDefault","formData","FormData","append","category","axios","post","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","data","fileName","filePath","title","response","status","id","onChange","target","files","value","placeholder","onInput","htmlFor","to","path","PdfList","state","empty","lists","buttonDisabled","selectedFile","body","JSON","stringify","setState","user","addPdfPath","map","obj","index","key","date","Button","disabled","deletePDF","ModalTitle","OtherFilesList","extension","PageList","pages","dir","i","length","Data","o","parse","time","alert","pathThen","pathname","data-toggle","data-placement","Col","Category","DocId","d","Date","setTime","formatted_date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Card","Row","md","Body","Title","Name","Subtitle","Link","deletePage","Footer","PdfFiles","open","setOpen","split","aria-controls","aria-expanded","in","OtherFiles","PageListFunc","Sidebar","ScrollUp","intervalId","pageYOffset","clearInterval","scroll","scrollStepInPx","setInterval","scrollStep","bind","delayInMs","scrollToTop","Label","GeneratePdf","navigator","clipboard","readText","text","values","inputFields","setInputFields","handleInputChange","event","handleFilenameChange","inputField","float","rows","splice","handleRemoveFields","paste","push","handleAddFieldsText","handleAddFieldsTitle","doc","jsPDF","fromHTML","document","getElementById","save","toPdf","class","EDITOR_JS_TOOLS","embed","Embed","config","services","youtube","coub","Instagram","Twitter","table","Table","inlineToolbar","paragraph","Paragraph","list","List","warning","Warning","linkTool","LinkTool","endpoint","SimpleImage","Image","image","ImageTool","endpoints","byFile","raw","Raw","header","marker","Marker","checklist","CheckList","delimiter","Delimiter","inlineCode","InlineCode","Editor","readOnly","editor","querySelectorAll","padding","editable_elements","removeAttribute","tabIndex","tool","tool2","pointerEvents","opentool","changeName","onReady","clear","editorInstance","outputData","onSave","autofocus","enableReInitialize","instanceRef","instance","tools","AccessibleMobile","AccesibleDocuments","AccessibleWeb","AccessibleKiosk","InputField","LoginForm","password","property","val","trim","UserStores","setItem","resetForm","Form","setInputValue","doLogin","Login","LawsAndRegulations","OnlineCourses","Home","AboutUs","EditorPages","goBack","match","docId","history","EditorNewPage","pdfjs","GlobalWorkerOptions","workerSrc","version","PdfViewer","setDivSize","pdfWrapper","getBoundingClientRect","throttledSetDivSize","throttle","addEventListener","removeEventListener","overflow","ref","wrapperDivSize","PureComponent","PdfComponent","onDocumentLoadSuccess","numPages","changePage","offset","prevState","pageNumber","previousPage","nextPage","download","onLoadSuccess","pageIndex","App","parentMethod","exact","render","component","observer","Boolean","hostname","ReactDOM","serviceWorker","ready","then","registration","unregister","catch","error","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.3c7c998e.chunk.js","sourcesContent":["import {extendObservable} from \"mobx\";\r\n\r\n/**\r\n * UserStore\r\n */\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: \"\"\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();\r\n","import React from \"react\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nexport default class CustomParticles  extends React.Component{\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return <div  style={{\r\n            width: '100%',\r\n            height: '100%'\r\n        }}><Particles\r\n            style={{ position: \"absolute\" }}\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n            params={{\r\n                \"particles\": {\r\n                    \"number\": {\"value\": 80, \"density\": {\"enable\": true, \"value_area\": 800}},\r\n                    \"color\": {\"value\": \"#ffffff\"},\r\n                    \"shape\": {\r\n                        \"type\": \"circle\",\r\n                        \"stroke\": {\"width\": 0, \"color\": \"#000000\"},\r\n                        \"polygon\": {\"nb_sides\": 5},\r\n                        \"image\": {\"src\": \"img/github.svg\", \"width\": 100, \"height\": 100}\r\n                    },\r\n                    \"opacity\": {\r\n                        \"value\": 0.5,\r\n                        \"random\": false,\r\n                        \"anim\": {\"enable\": false, \"speed\": 1, \"opacity_min\": 0.1, \"sync\": false}\r\n                    },\r\n                    \"size\": {\r\n                        \"value\": 3,\r\n                        \"random\": true,\r\n                        \"anim\": {\"enable\": false, \"speed\": 40, \"size_min\": 0.1, \"sync\": false}\r\n                    },\r\n                    \"line_linked\": {\"enable\": true, \"distance\": 150, \"color\": \"#ffffff\", \"opacity\": 0.4, \"width\": 1},\r\n                    \"move\": {\r\n                        \"enable\": true,\r\n                        \"speed\": 6,\r\n                        \"direction\": \"none\",\r\n                        \"random\": false,\r\n                        \"straight\": false,\r\n                        \"out_mode\": \"out\",\r\n                        \"bounce\": false,\r\n                        \"attract\": {\"enable\": false, \"rotateX\": 600, \"rotateY\": 1200}\r\n                    }\r\n                },\r\n                \"interactivity\": {\r\n                    \"detect_on\": \"canvas\",\r\n                    \"events\": {\r\n                        \"onhover\": {\"enable\": true, \"mode\": \"repulse\"},\r\n                        \"onclick\": {\"enable\": true, \"mode\": \"push\"},\r\n                        \"resize\": true\r\n                    },\r\n                    \"modes\": {\r\n                        \"grab\": {\"distance\": 400, \"line_linked\": {\"opacity\": 1}},\r\n                        \"bubble\": {\"distance\": 400, \"size\": 40, \"duration\": 2, \"opacity\": 8, \"speed\": 3},\r\n                        \"repulse\": {\"distance\": 200, \"duration\": 0.4},\r\n                        \"push\": {\"particles_nb\": 4},\r\n                        \"remove\": {\"particles_nb\": 2}\r\n                    }\r\n                },\r\n                \"retina_detect\": true\r\n            }}\r\n        /></div>\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport CustomParticles from \"../FancyComponents/CustomParticles\";\r\n\r\nexport class Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid bg-info col-sm-12 d-none d-xl-block\" style={{position: 'relative'}}  >\r\n            <CustomParticles />\r\n            <br/><br/><br/>\r\n            </div>)\r\n    }\r\n\r\n} ","/*\r\nimport React, {Component} from \"react\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from \"react-bootstrap\";\r\nimport Login from \"../PageComponents/Login\";\r\nimport UserStores from \"../../stores/UserStores\";\r\nimport CustomParticles from \"../FancyComponents/CustomParticles\";\r\nimport {CardText} from \"react-bootstrap/Card\";\r\nimport FormText from \"react-bootstrap/FormText\";\r\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\r\n\r\n\r\nexport class Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n    async doLogout() {\r\n        try {\r\n            let res = await fetch('/logout', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            let result = await res.json();\r\n\r\n            if (result && result.success) {\r\n                //    UserStores.isLoggedIn = false;\r\n                //UserStores.username = '';\r\n                localStorage.removeItem('user');\r\n                window.location.reload(false);\r\n\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let user = localStorage.getItem('user');\r\n        if (user != null) {\r\n            return (\r\n                <Navbar sticky='top' bg=\"light\" expand=\"lg\" variant='light'\r\n                        className='shadow rounded bg-light pt-0 pb-0'>\r\n                    <Navbar.Brand to=\"/\">\r\n                        <img src=\"/logo192.png\" alt=\"Logo\" className=\"img-fluid rounded mx-auto d-block \" width='50'/>\r\n                    </Navbar.Brand>\r\n                    <h2 className=\"d-none d-sm-block text-dark\" style={{'font-size': '1.2em'}}> ICT Universal Design </h2>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto ml-auto \">\r\n                            <Nav.Link href=\"/\" className=\" myNav m-0 col px-md-3 text-dark\"> <i className=\"fa fa-home\"></i> Home\r\n                            </Nav.Link>\r\n                            <NavDropdown\r\n                                title={<div className='d-inline pr-0 m-0 col px-md-3 text-dark'><i\r\n                                    className=\"fa fa-graduation-cap\"/> Learning\r\n                                    material </div>} className=\" myNav\">\r\n                                <NavDropdown.Item href=\"/accessiblekiosk\" className=' myNav bg-light text-dark'>Accessible\r\n                                    Kiosk</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/accessibledocuments\" className=' myNav bg-light text-dark'>Accessible\r\n                                    Documents</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/accessiblemobile\" className='myNav  bg-light text-dark'>Accessible\r\n                                    Mobile</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"accessibleweb\" className='myNav bg-light text-dark'> Accessible\r\n                                    Web</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <Nav.Link href=\"/lawsandregulations\" className=\"myNav m-0 px-md-3 text-dark\"> <i\r\n                                className=\"fa fa-legal\"></i> Laws and regulations </Nav.Link>\r\n                            <Nav.Link href=\"/onlinecourses\" className=\" myNav m-0 px-md-3 text-dark\"><i\r\n                                className=\"fa fa-laptop\"></i> Online Courses</Nav.Link>\r\n                            <Nav.Link href=\"/aboutus\" className=\" myNav m-0 px-md-3 text-dark\"><i\r\n                                className=\"fa fa-info\"></i> About us</Nav.Link>\r\n                        </Nav>\r\n                        <Nav className=\"mr-2 myNav\">\r\n                            <Nav.Link onClick={this.doLogout} className=\"myNav m-0 px-md-3 text-dark\"> <i className='fa fa-sign-out' aria-hidden=\"true\"></i> Log\r\n                                out</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n            );\r\n        } else {\r\n            return (\r\n                <Navbar sticky='top' bg=\"light\" expand=\"lg\" variant='light'\r\n                        className='shadow rounded bg-light pt-0 pb-0'>\r\n                    <Navbar.Brand to=\"/\">\r\n                        <img src=\"/logo192.png\" alt=\"Logo\" className=\"img-fluid rounded mx-auto d-block \" width='50'/>\r\n                    </Navbar.Brand>\r\n                    <h2 className=\"d-none d-sm-block text-dark\" style={{'font-size': '1.2em'}}> ICT Universal Design </h2>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto ml-auto \">\r\n                            <Nav.Link href=\"/\" className=\" myNav m-0 col px-md-3 text-dark\"> <i className=\"fa fa-home\"></i> Home\r\n                            </Nav.Link>\r\n                            <NavDropdown\r\n                                title={<div className='d-inline pr-0 m-0 col px-md-3 text-dark'><i\r\n                                    className=\"fa fa-graduation-cap\"/> Learning\r\n                                    material </div>} className=\" myNav\">\r\n                                <NavDropdown.Item href=\"/accessiblekiosk\" className=' myNav bg-light text-dark '>Accessible\r\n                                    Kiosk</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/accessibledocuments\" className=' myNav bg-light text-dark'>Accessible\r\n                                    Documents</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/accessiblemobile\" className='myNav  bg-light text-dark'>Accessible\r\n                                    Mobile</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"accessibleweb\" className='myNav bg-light text-dark'> Accessible\r\n                                    Web</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <Nav.Link href=\"/lawsandregulations\" className=\"myNav m-0 px-md-3 text-dark\"> <i\r\n                                className=\"fa fa-legal\"></i> Laws and regulations </Nav.Link>\r\n                            <Nav.Link href=\"/onlinecourses\" className=\" myNav m-0 px-md-3 text-dark\"><i\r\n                                className=\"fa fa-laptop\"></i> Online Courses</Nav.Link>\r\n                            <Nav.Link href=\"/aboutus\" className=\" myNav m-0 px-md-3 text-dark\"><i\r\n                                className=\"fa fa-info\"></i> About us</Nav.Link>\r\n                        </Nav>\r\n                        <Nav className=\"mr-2 myNav\">\r\n                            <Nav.Link href=\"/login\" className=\"myNav m-0 px-md-3 text-dark\"> <i className='fa fa-sign-in' aria-hidden=\"true\"></i> Log\r\n                                in</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n*/\r\n\r\n\r\nimport React, {useState} from 'react';\r\nimport {\r\n    Collapse,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Nav,\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown\r\n} from 'reactstrap';\r\n\r\nconst Navigation = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const doLogout = async () => {\r\n        try {\r\n            let res = await fetch('/logout', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            let result = await res.json();\r\n\r\n            if (result && result.success) {\r\n                //    UserStores.isLoggedIn = false;\r\n                //UserStores.username = '';\r\n                localStorage.removeItem('user');\r\n                window.location.reload(false);\r\n\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    let user = localStorage.getItem('user');\r\n    if (user == null) {\r\n        return (\r\n            <div className='shadow sticky-top'>\r\n                <Navbar color=\"light\" light expand=\"xl\">\r\n                    <NavbarBrand href=\"/\"><img src=\"/logo192.png\" alt=\"Logo\" className=\"img-fluid rounded mx-auto d-block \" width='25'/></NavbarBrand>\r\n                    <NavbarBrand href=\"/\">Universal design</NavbarBrand>\r\n                    <NavbarToggler onClick={toggle}/>\r\n                    <Collapse isOpen={isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink href=\"/\"><i className=\"fa fa-home\"></i> Home</NavLink>\r\n                            </NavItem>\r\n                            <UncontrolledDropdown nav inNavbar>\r\n                                <DropdownToggle nav caret>\r\n                                    <i\r\n                                        className=\"fa fa-graduation-cap\"/> Learning material\r\n                                </DropdownToggle>\r\n                                <DropdownMenu right>\r\n                                    <DropdownItem>\r\n                                        <NavLink href=\"/accessiblekiosk\">Accessible\r\n                                            Kiosk</NavLink>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem>\r\n                                        <NavLink href=\"/accessibledocuments\">Accessible\r\n                                            Documents</NavLink>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem>\r\n                                        <NavLink href=\"/accessiblemobile\">Accessible\r\n                                            Mobile</NavLink>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem>\r\n                                        <NavLink href=\"/accessibleweb\">Accessible\r\n                                            Web</NavLink>\r\n                                    </DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                            <NavItem>\r\n                                <NavLink href=\"/lawsandregulations\"> <i\r\n                                    className=\"fa fa-legal\"></i> Laws and regulations</NavLink>\r\n                            </NavItem> <NavItem>\r\n                            <NavLink href=\"/onlinecourses\"><i\r\n                                className=\"fa fa-book\"></i> Online courses</NavLink>\r\n                        </NavItem>\r\n                            <NavItem>\r\n                                <NavLink href=\"/aboutus\"><i\r\n                                    className=\"fa fa-info\"></i> About us</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink href=\"/login\"><i className='fa fa-sign-in' aria-hidden=\"true\"></i> Log\r\n                                    in</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (       <div className='shadow sticky-top'>\r\n            <Navbar color=\"light\" light expand=\"xl\" >\r\n                <NavbarBrand href=\"/\"><img src=\"/logo192.png\" alt=\"Logo\" className=\"img-fluid rounded mx-auto d-block \" width='25'/></NavbarBrand>\r\n                <NavbarBrand href=\"/\">Universal design</NavbarBrand>\r\n                <NavbarToggler onClick={toggle}/>\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/\"><i className=\"fa fa-home\"></i> Home</NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledDropdown nav inNavbar>\r\n                            <DropdownToggle nav caret>\r\n                                <i\r\n                                    className=\"fa fa-graduation-cap\"/> Learning material\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem>\r\n                                    <NavLink href=\"/accessiblekiosk\">Accessible\r\n                                        Kiosk</NavLink>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <NavLink href=\"/accessibledocuments\">Accessible\r\n                                        Documents</NavLink>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <NavLink href=\"/accessiblemobile\">Accessible\r\n                                        Mobile</NavLink>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <NavLink href=\"/accessibleweb\">Accessible\r\n                                        Web</NavLink>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                        <NavItem>\r\n                            <NavLink href=\"/lawsandregulations\"> <i\r\n                                className=\"fa fa-legal\"></i> Laws and regulations</NavLink>\r\n                        </NavItem> <NavItem>\r\n                        <NavLink href=\"/onlinecourses\"><i\r\n                            className=\"fa fa-book\"></i> Online courses</NavLink>\r\n                    </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/aboutus\"><i\r\n                                className=\"fa fa-info\"></i> About us</NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"\" onClick={doLogout}><i className='fa fa-sign-out' aria-hidden=\"true\"></i> Log\r\n                                out</NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n\r\n///*<img src=\"/logo192.png\" alt=\"Logo\" className=\"img-fluid rounded mx-auto d-block \" width='50'/>*/","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = ({ msg }) => {\r\n\r\n    const [show, setShow] = useState(true);\r\n\r\n\r\n    const oneClick = () => {\r\n        setShow(false);\r\n    }\r\n    return (\r\n        <div className='alert alert-info alert-dismissible fade show' role='alert' style={{display: show ? 'block' : 'none' }}\r\n        >\r\n            {msg}\r\n            <button\r\n                type='button'\r\n                className='close'\r\n                data-dismiss='alert'\r\n                aria-label='Close'\r\n                onClick={oneClick}\r\n            >\r\n                <span aria-hidden='true'>&times;</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nMessage.propTypes = {\r\n    msg: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({ percentage }) => {\r\n    return (\r\n        <div className='progress'>\r\n            <div\r\n                className='progress-bar progress-bar-striped bg-success'\r\n                role='progressbar'\r\n                style={{ width: `${percentage}%` }}\r\n            >\r\n                {percentage}%\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProgress.propTypes = {\r\n    percentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Progress;\r\n","import React, {Fragment, useState} from 'react';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FileUpload = (props) => {\r\n    const [file, setFile] = useState('');\r\n    const [filename, setFilename] = useState('Choose File');\r\n    const [name, setName] = useState();\r\n\r\n    const [uploadedFile, setUploadedFile] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n    const onChange = e => {\r\n        const filename = e.target.files[0].name;\r\n        if (true) {\r\n            setFile(e.target.files[0]);\r\n            setFilename(e.target.files[0].name);\r\n        } else {\r\n            setMessage('Not allowed file files are allowed');\r\n            setFile(null);\r\n            setFilename(null);\r\n        }\r\n\r\n    };\r\n    const handleChange = e => {\r\n        setName(e.target.value)\r\n    };\r\n\r\n    const reload = () => {\r\n        window.location.reload(false);\r\n    }\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('title', name);\r\n        formData.append('category', props.category);\r\n\r\n\r\n        try {\r\n            const res = await axios.post('/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                onUploadProgress: progressEvent => {\r\n                    setUploadPercentage(\r\n                        parseInt(\r\n                            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                        )\r\n                    );\r\n\r\n                    // Clear percentage\r\n                    setTimeout(() => setUploadPercentage(0), 10000);\r\n                }\r\n            });\r\n\r\n            const {fileName, filePath} = res.data;\r\n            console.log(res.data.title);\r\n\r\n            if (res.data.success) {\r\n                setUploadedFile({fileName, filePath});\r\n                setMessage('File Uploaded');\r\n                window.setTimeout(reload, 1000);\r\n            } else {\r\n                console.log(res.data.msg);\r\n            }\r\n        } catch (err) {\r\n            if (err.response.status === 500) {\r\n                setMessage('There was a problem with the server');\r\n            } else {\r\n                setMessage(err.response.data.msg);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Message msg='Upload a file'/>\r\n            {message ? <Message msg={message}/> : null}\r\n            <form onSubmit={onSubmit}>\r\n                <div className='custom-file mb-4'>\r\n                    <input type='file' className='custom-file-input mb-4' id='customFile' onChange={onChange}/>\r\n                    <input value={name} placeholder='Title of pdf' type=\"text\" name=\"name\" onInput={handleChange}\r\n                           className='form-control'/>\r\n                    <label className='custom-file-label' htmlFor='customFile'>{filename}</label>\r\n                </div>\r\n                <br/><br/><br/>\r\n                <Progress percentage={uploadPercentage}/>\r\n                <br/>\r\n                <div className='form-row'>\r\n                <div className=\"form-group col-sm-12 text-center\">\r\n                <input\r\n                    type='submit'\r\n                    value='Upload'\r\n                    className='btn btn-info w-100'\r\n                />\r\n                </div>\r\n                <div className=\"form-group col-sm-12 text-center w-100\">\r\n                    <Link to={props.path} className='btn btn-success w-100'> Generate Pdf </Link>\r\n                </div>\r\n                </div>\r\n            </form>\r\n\r\n                    </Fragment>\r\n                );\r\n            };\r\n\r\n            export default FileUpload;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {ModalTitle} from \"react-bootstrap\";\r\nimport FileUpload from \"./FileUpload\";\r\n\r\n\r\nexport class PdfList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            empty: false,\r\n            lists: [],\r\n            buttonDisabled: false,\r\n            selectedFile: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n\r\n            let res = await fetch('/renderPdf', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    category: this.props.category\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                this.setState({lists: result.files, loading: false, empty: false});\r\n                console.log(result.files);\r\n\r\n            } else if (result && result.success === false) {\r\n                this.setState({\r\n                    empty: true,\r\n                    loading: false\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async deletePDF(id) {\r\n        try {\r\n\r\n            let res = await fetch('/deleteFile', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    id: id\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                this.setState({\r\n                    buttonDisabled: true\r\n                })\r\n                window.location.reload(false);\r\n            } else if (result && result.success === false) {\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let user = localStorage.getItem('user');\r\n        let addPdfPath = '/' + this.props.category + '/addPdf/';\r\n        if (user !== null) {\r\n            console.log(this.state.lists);\r\n            return (\r\n                <div className=\"list-group\">\r\n                     {this.state.loading ? (\r\n                                <div className='h4'>Loading...</div>\r\n                            ) :\r\n                            this.state.empty ? (\r\n                                <>\r\n                                <FileUpload category={this.props.category} path={addPdfPath}/>\r\n                                <div className='h2'>Empty</div>\r\n                                </>\r\n                                )\r\n                            : (\r\n                                <div>\r\n                                    <FileUpload category={this.props.category} path={addPdfPath}/>\r\n                                    <ul className='list-group'> {this.state.lists.map((obj, index) => {\r\n                                        let path = '/' + this.props.category  + '/pdf/' + obj.name;\r\n                                        return (\r\n                                            <li className='list-group-item list-group-item-action shadow rounded bg-light'\r\n                                                key={obj.id}>\r\n                                                <div className='row'>\r\n                                                <div className='col-md-9'>\r\n                                                    <div className='col-md-12 p-0'>\r\n                                                        <a href={path} className=' text-dark list-group-item-action '> {obj.title} </a>\r\n                                                    </div>\r\n                                                    <div className='col-md-12 text-dark p-0 card-footer'>\r\n                                                       <small className=\"text-muted \">Uploaded  {obj.date} </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-md-3'>\r\n                                                    <Button\r\n                                                        type='submit'\r\n                                                        disabled={this.state.buttonDisabled}\r\n                                                        onClick={() => this.deletePDF(obj.id)}\r\n                                                        className='btn-danger float-right m-auto'>Delete</Button>\r\n                                                </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        );\r\n                                    })\r\n                                    }\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n\r\n                <div className=\"list-group\">\r\n                    {this.state.loading ? (\r\n                            <div className='h4'>Loading...</div>\r\n                        ) :\r\n                        this.state.empty ? (\r\n                                    <div className='h4'>Empty</div>\r\n                            )\r\n                            : (\r\n                                <div>\r\n                                    <ModalTitle> </ModalTitle>\r\n                                    <ul className='list-group'> {this.state.lists.map((obj, index) => {\r\n                                        let path = '/' + this.props.category  + '/pdf/' + obj.name;\r\n                                        return (\r\n                                            <li className='text-dark  list-group-item list-group-item-action'\r\n                                                key={obj.id}>\r\n                                                <div className='row'>\r\n                                                    <div className='col-md-12'>\r\n                                                        <div className='col-md-12 p-0'>\r\n                                                            <a href={path} className=' text-dark stretched-link list-group-item-action '> {obj.title} </a>\r\n                                                        </div>\r\n                                                        <div className='col-md-12 text-dark p-0 card-footer'>\r\n                                                            <a href={path} className=' text-dark stretched-link list-group-item-action '><small className=\"text-muted \">Uploaded  {obj.date} </small></a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        );\r\n                                    })\r\n                                    }\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {ModalTitle} from \"react-bootstrap\";\r\nimport FileUpload from \"./FileUpload\";\r\n\r\n\r\nexport class OtherFilesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            empty: false,\r\n            lists: [],\r\n            buttonDisabled: false,\r\n            selectedFile: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n\r\n            let res = await fetch('/renderOtherFiles', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    category: this.props.category\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                this.setState({lists: result.files, loading: false, empty: false});\r\n                console.log(result.files);\r\n\r\n            } else if (result && result.success === false) {\r\n                this.setState({\r\n                    empty: true,\r\n                    loading: false\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async deletePDF(id) {\r\n        try {\r\n\r\n            let res = await fetch('/deleteFile', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    id: id\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                this.setState({\r\n                    buttonDisabled: true\r\n                })\r\n                window.location.reload(false);\r\n            } else if (result && result.success === false) {\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let user = localStorage.getItem('user');\r\n        let addPdfPath = '/' + this.props.category + '/addPdf/';\r\n        if (user !== null) {\r\n            console.log(this.state.lists);\r\n            return (\r\n                <div className=\"list-group\">\r\n                    {this.state.loading ? (\r\n                            <div className='h4'>Loading...</div>\r\n                        ) :\r\n                        this.state.empty ? (\r\n                                <>\r\n                                    <FileUpload category={this.props.category} path={addPdfPath}/>\r\n                                    <div className='h2'>Empty</div>\r\n                                </>\r\n                            )\r\n                            : (\r\n                                <div>\r\n                                    <FileUpload category={this.props.category} path={addPdfPath}/>\r\n                                    <ul className='list-group'> {this.state.lists.map((obj, index) => {\r\n                                        let path = '/Files/' + obj.name;\r\n                                        return (\r\n                                            <li className='list-group-item list-group-item-action shadow rounded bg-light'\r\n                                                key={obj.id}>\r\n                                                <div className='row'>\r\n                                                    <div className='col-md-9'>\r\n                                                        <div className='col-md-12 p-0'>\r\n                                                            <a href={path} className=' text-dark list-group-item-action '> {obj.title} ({obj.extension}) </a>\r\n                                                        </div>\r\n                                                        <div className='col-md-12 text-dark p-0 card-footer'>\r\n                                                            <small className=\"text-muted \">Uploaded  {obj.date} </small>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='col-md-3'>\r\n                                                        <Button\r\n                                                            type='submit'\r\n                                                            disabled={this.state.buttonDisabled}\r\n                                                            onClick={() => this.deletePDF(obj.id)}\r\n                                                            className='btn-danger float-right m-auto'>Delete</Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        );\r\n                                    })\r\n                                    }\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n\r\n                <div className=\"list-group\">\r\n                    {this.state.loading ? (\r\n                            <div className='h4'>Loading...</div>\r\n                        ) :\r\n                        this.state.empty ? (\r\n                                <div className='h4'>Empty</div>\r\n                            )\r\n                            : (\r\n                                <div>\r\n                                    <ModalTitle> </ModalTitle>\r\n                                    <ul className='list-group'> {this.state.lists.map((obj, index) => {\r\n                                        let path = '/Files/' + obj.name;\r\n                                        return (\r\n                                            <li className='text-dark  list-group-item list-group-item-action'\r\n                                                key={obj.id}>\r\n                                                <div className='row'>\r\n                                                    <div className='col-md-12'>\r\n                                                        <div className='col-md-12 p-0'>\r\n                                                            <a href={path} className=' text-dark stretched-link list-group-item-action '> {obj.title} ({obj.extension}) </a>\r\n                                                        </div>\r\n                                                        <div className='col-md-12 text-dark p-0 card-footer'>\r\n                                                            <a href={path} className=' text-dark stretched-link list-group-item-action '><small className=\"text-muted \">Uploaded  {obj.date} </small></a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        );\r\n                                    })\r\n                                    }\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n\r\nexport class PageList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pages: [{}],\r\n            empty: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        try {\r\n            let res = await fetch('/openPage', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    category: this.props.category,\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                const res = result.data;\r\n                console.dir('Data from database : ' + res);\r\n\r\n                for (let i = 0; i < res.length; i++) {\r\n                    if(res[i].Data != null) {\r\n                        let o = JSON.parse(res[i].Data);\r\n                        res[i].Data = o.time;\r\n                    }\r\n                }\r\n                console.dir('Data from database : ' + res);\r\n\r\n\r\n                    this.setState({\r\n                        pages: res\r\n                    });\r\n                console.dir(res);\r\n\r\n\r\n            } else if (result && result.success === false) {\r\n                console.log(\"Empty\");\r\n                this.setState({\r\n                    empty: true\r\n                });\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n\r\n    }\r\n\r\n async deletePage (id) {\r\n     let res = await fetch('/deletePage', {\r\n         method: 'post',\r\n         headers: {\r\n             'Accept': 'application/json',\r\n             'Content-Type': 'application/json'\r\n         },\r\n         body: JSON.stringify({\r\n             id: id\r\n         })\r\n     });\r\n\r\n     let result = await res.json();\r\n     if(result.success && result){\r\n         alert('Deleted from database');\r\n         window.location.reload(false);\r\n     }\r\n     else {\r\n         alert('Did not remove from database');\r\n     }\r\n\r\n\r\n}\r\n\r\n    render() {\r\n        let pathNow = window.location.pathname;\r\n        let pathThen = pathNow +'/newPage/';\r\n\r\n        {\r\n            let user = localStorage.getItem('user');\r\n            if (user !== null) {\r\n                return (\r\n                    <div >\r\n                        <div className=\"card-header bg-info text-white  mt-2 shadow  mb-2 text-uppercase\">\r\n                            {this.props.name}\r\n                            <Link to={pathThen}  className='text-white my-auto float-right ' data-toggle=\"tooltip\"\r\n                                  data-placement=\"top\" title=\"Add new page\">\r\n                                <i className=\"fa fa-plus fa-lg  myAct\" aria-hidden=\"true\"></i>\r\n                            </Link>\r\n                        </div>\r\n                        <Col className='p-0'>\r\n                            {\r\n                                !this.state.empty ? (\r\n                                this.state.pages.map((obj, index) => {\r\n                                    let path = '/' + obj.Category + '/page/' + obj.DocId + '/';\r\n                                    let d = new Date();\r\n                                    d.setTime(obj.Data);\r\n                                    let formatted_date = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds()\r\n\r\n                                    return (\r\n                                        <Card className='shadow  mb-2'>\r\n                                            <Row className=\"no-gutters\">\r\n                                                <Col md=\"12\" className='my-auto'>\r\n                                                    <Card style={{ width: '100%' }}>\r\n                                                        <Card.Body>\r\n                                                            <Card.Title> {obj.Name}  </Card.Title>\r\n                                                            <Card.Subtitle className=\"mb-2 text-muted\">{obj.Category}</Card.Subtitle>\r\n                                                            <Card.Link href={path}>View page</Card.Link>\r\n                                                            <Card.Link href='' onClick={() => this.deletePage(obj.DocId)}>Delete</Card.Link>\r\n                                                            <Card.Link href={path}>Edit</Card.Link>\r\n                                                            <Card.Footer className=\"text-muted align-bottom \" ><small>Updated  {formatted_date}</small></Card.Footer>\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card>)\r\n                                })):(null)\r\n                            }\r\n\r\n                        </Col>\r\n                    </div>);\r\n            }\r\n            else {\r\n                return (\r\n                    <div>\r\n                        <div className=\"card-header bg-info text-white mt-2 shadow rounded mb-2 text-uppercase\">\r\n                            {this.props.name}\r\n                        </div>\r\n                            {\r\n                                !this.state.empty ? (\r\n                                this.state.pages.map((obj, index) => {\r\n                                    let path = '/' + obj.Category + '/page/' + obj.DocId + '/';\r\n                                    let d = new Date();\r\n                                    d.setTime(obj.Data);\r\n                                    let formatted_date = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds()\r\n\r\n                                    return (\r\n                                        <Card className='shadow rounded mb-2 list-group-item-action'>\r\n                                            <Row className=\"no-gutters\">\r\n                                                <Col md=\"12\" className='my-auto'>\r\n                                                    <Card style={{ width: '100%' }}>\r\n                                                        <Card.Body>\r\n                                                            <Card.Title> {obj.Name}  </Card.Title>\r\n                                                            <Card.Subtitle className=\"mb-2 text-muted\"> {obj.Category}</Card.Subtitle>\r\n                                                            <Card.Link href={path} className='stretched-link'>View page</Card.Link>\r\n                                                            <Card.Footer className=\"text-muted align-bottom \" ><small>Updated  {formatted_date} </small></Card.Footer>\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card>)\r\n                                })): (null)\r\n                            }\r\n                    </div>);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport '../../App.css';\r\nimport {PdfList} from \"../PageComponents/EditableLayer/PdfList\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport {OtherFilesList} from \"../PageComponents/EditableLayer/OtherFilesList\";\r\nimport {PageList} from \"../PageComponents/EditableLayer/PageList\";\r\n\r\nfunction PdfFiles() {\r\n    const [open, setOpen] = useState(false);\r\n    let path = window.location.pathname;\r\n    let res = path.split(\"/\");\r\n    return (\r\n        <>\r\n            <div className=\"card-header bg-info text-white text-uppercase\">\r\n                <i className=\"fa fa-list \"></i> Pdf files\r\n\r\n                <i className=' fa fa-angle-down float-right  fa-2x' onClick={() => setOpen(!open)}\r\n                   aria-controls=\"example-collapse-text\"\r\n                   aria-expanded={open}></i>\r\n            </div>\r\n\r\n            <Collapse in={open}>\r\n                <div id=\"example-collapse-text\">\r\n                    <PdfList category={res[1]}/>\r\n                </div>\r\n            </Collapse>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction OtherFiles() {\r\n    const [open, setOpen] = useState(false);\r\n    let path = window.location.pathname;\r\n    let res = path.split(\"/\");\r\n    return (\r\n        <>\r\n            <div className=\"card-header bg-info text-white text-uppercase\">\r\n                <i className=\"fa fa-list \"></i> Other files\r\n\r\n                <i className=' fa fa-angle-down float-right  fa-2x' onClick={() => setOpen(!open)}\r\n                   aria-controls=\"example-collapse-text\"\r\n                   aria-expanded={open}></i>\r\n            </div>\r\n\r\n            <Collapse in={open}>\r\n                <div id=\"example-collapse-text\">\r\n                    <OtherFilesList category={res[1]}/>\r\n                </div>\r\n            </Collapse>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction PageListFunc() {\r\n    const [open, setOpen] = useState(false);\r\n    let path = window.location.pathname;\r\n    let res = path.split(\"/\");\r\n    return (\r\n        <>\r\n            <div className=\"card-header bg-info text-white text-uppercase\">\r\n                <i className=\"fa fa-list \"></i> Pages\r\n\r\n                <i className=' fa fa-angle-down float-right  fa-2x' onClick={() => setOpen(!open)}\r\n                   aria-controls=\"example-collapse-text\"\r\n                   aria-expanded={open}></i>\r\n            </div>\r\n\r\n            <Collapse in={open}>\r\n                <div id=\"example-collapse-text\">\r\n                    <PageList category={res[1]} name='Laws And Regulations'/>\r\n                </div>\r\n            </Collapse>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default class Sidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<div className=\"col-md-2 sidebar  mt-3 order-md-1 order-2 pr-md-0 \">\r\n                <div className=\"card mb-3 shadow rounded bg-light pt-0 pb-0 d-none d-xl-block\">\r\n\r\n                    <div className=\"card-header bg-info text-white text-uppercase\"><i\r\n                        className=\"fa fa-list\"></i> Categories\r\n\r\n                    </div>\r\n                    <ul className=\"list-group \">\r\n\r\n                        <li className=\"list-group-item list-group-item-info text-dark \"> Learning material</li>\r\n\r\n                        <li className=\"list-group-item\"><a href=\"/accessiblekiosk\"\r\n                                                           className=' text-dark stretched-link list-group-item-action '> Accessible\r\n                            Kiosk </a></li>\r\n                        <li className=\"list-group-item\"><a href=\"/accessibleweb\"\r\n                                                           className=' text-dark stretched-link list-group-item-action '> Accessible\r\n                            Web </a></li>\r\n                        <li className=\"list-group-item\"><a href=\"/accessibledocuments\"\r\n                                                           className=' text-dark stretched-link list-group-item-action '> Accessible\r\n                            Documents </a></li>\r\n                        <li className=\"list-group-item\"><a href=\"/accessiblemobile\"\r\n                                                           className=' text-dark stretched-link list-group-item-action '> Accessible\r\n                            Mobile </a></li>\r\n                        <li className=\"list-group-item list-group-item-info text-dark\"> Other</li>\r\n\r\n                        <li className=\"list-group-item\"><a href=\"/lawsandregulations\"\r\n                                                           className=' text-dark stretched-link list-group-item-action '> Laws\r\n                            and regulations </a></li>\r\n                        <li className=\"list-group-item\"><a href=\"/onlinecourses\"\r\n                                                           className=' text-dark stretched-link list-group-item-action '> Online\r\n                            courses </a></li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n                <div className=\"card mb-3 shadow rounded bg-light pt-0 pb-0 \">\r\n                    <PdfFiles/>\r\n                </div>\r\n            <div className=\"card mb-3 shadow rounded bg-light pt-0 pb-0 \">\r\n                <OtherFiles/>\r\n            </div>\r\n                <div className=\"card mb-3 shadow rounded bg-light pt-0 pb-0 \">\r\n                    <PageListFunc/>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import * as React from \"react\";\r\n\r\n\r\nexport class ScrollUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            intervalId: 0\r\n        };\r\n    }\r\n\r\n    scrollStep() {\r\n        if (window.pageYOffset === 0) {\r\n            clearInterval(this.state.intervalId);\r\n        }\r\n        window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\r\n    }\r\n\r\n    scrollToTop() {\r\n        let intervalId = setInterval(this.scrollStep.bind(this), this.props.delayInMs);\r\n        this.setState({ intervalId: intervalId });\r\n    }\r\n\r\n    render () {\r\n        return <button title='Back to top' className='scroll bg-info '\r\n                       onClick={ () => { this.scrollToTop(); }}>\r\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\"></i>\r\n        </button>;\r\n    }\r\n}","import React from \"react\";\r\nimport {ScrollUp} from \"./ScrollUp\";\r\nimport {Label} from \"reactstrap\";\r\n\r\n\r\nexport class Footer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <footer className=\"navbar fixed-bottom p-0\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Label className='p-2 m-0'>&copy; Copyright 2020 All rights reserved.</Label>\r\n                    <ScrollUp scrollStepInPx=\"50\" delayInMs=\"16.66\"/>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    }\r\n}","import React, {Fragment, useState} from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport jsPDF from \"jspdf\";\r\n\r\nconst GeneratePdf = () => {\r\n\r\n        async function paste(index) {\r\n            const text = await navigator.clipboard.readText();\r\n            const values = [...inputFields];\r\n            if (values[index].title != null) {\r\n                values[index].title = text;\r\n            } else {\r\n                values[index].text = text;\r\n            }\r\n            setInputFields(values);\r\n        }\r\n\r\n        const [inputFields, setInputFields] = useState([\r\n            {title: ''}\r\n        ]);\r\n        const [filename, setFilename] = useState('');\r\n\r\n        const handleAddFieldsTitle = () => {\r\n            const values = [...inputFields];\r\n            values.push({title: ''});\r\n            setInputFields(values);\r\n        };\r\n\r\n        const handleAddFieldsText = () => {\r\n            const values = [...inputFields];\r\n            values.push({text: ''});\r\n            setInputFields(values);\r\n        };\r\n\r\n        const handleRemoveFields = index => {\r\n            const values = [...inputFields];\r\n            values.splice(index, 1);\r\n            setInputFields(values);\r\n        };\r\n\r\n        const handleInputChange = (index, event) => {\r\n            const values = [...inputFields];\r\n            if (event.target.name === \"title\") {\r\n                values[index].title = event.target.value;\r\n            } else {\r\n                values[index].text = event.target.value;\r\n            }\r\n\r\n            setInputFields(values);\r\n        };\r\n        const handleFilenameChange = (event) => {\r\n            setFilename(event.target.value);\r\n        }\r\n\r\n\r\n        const handleSubmit = e => {\r\n            e.preventDefault();\r\n\r\n        };\r\n\r\n        const toPdf = () => {\r\n            let doc = new jsPDF();\r\n            doc.fromHTML(document.getElementById('pdf'), 15,\r\n                0.5,\r\n                {\r\n                    'width': 180\r\n                });\r\n            doc.save(filename + 'pdf');\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <form onSubmit={handleSubmit}>\r\n                    <>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-sm-12\">\r\n                                <div className=\"card-header bg-info text-white shadow rounded \">\r\n                                    File name\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"filename\"\r\n                                    name=\"filename\"\r\n                                    placeholder=\"Enter filename without '.pdf'\"\r\n                                    value={filename}\r\n                                    onChange={event => handleFilenameChange(event)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n\r\n                            {inputFields.map((inputField, index) => (\r\n                                <Fragment key={`${inputField}~${index}`} >\r\n                                    {inputField.title != null ? (\r\n                                        <div className=\"form-group col-sm-10 mt-4 \">\r\n                                            <div className=\"card-header list-group-item-info text-black-50\">\r\n                                                Title\r\n                                                <p style={{float: 'right'}}> Content number {index + 1}</p>\r\n                                            </div>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control shadow rounded\"\r\n                                                id=\"title\"\r\n                                                name=\"title\"\r\n                                                placeholder='Title...'\r\n                                                value={inputField.title}\r\n                                                onChange={event => handleInputChange(index, event)}\r\n                                            />\r\n                                        </div>) : (\r\n                                        <div className=\"form-group col-sm-10 mt-4\">\r\n                                            <div className=\"card-header list-group-item-info text-black-50\">\r\n                                                Paragraph\r\n                                                <p style={{float: 'right'}}>Content number {index + 1}</p>\r\n                                            </div>\r\n                                            <textarea className=\"form-control shadow rounded\"\r\n                                                      name=\"Text\"\r\n                                                      placeholder='Paragraph...'\r\n                                                      rows=\"3\"\r\n                                                      id=\"title\"\r\n                                                      value={inputField.text}\r\n                                                      onChange={event => handleInputChange(index, event)}\r\n                                            ></textarea>\r\n\r\n                                        </div>)}\r\n                                    <div className=\" col-sm-2 d-flex flex-column justify-content-center align-items-center \">\r\n                                        <Button\r\n                                            type='submit'\r\n                                            onClick={() => handleRemoveFields(index)}\r\n                                            className='btn-danger w-100 shadow rounded'>Remove</Button>\r\n                                        <Button\r\n                                            type='submit'\r\n                                            onClick={() => paste(index)}\r\n                                            className='btn-success  w-100 mt-2 shadow rounded'>Paste</Button>\r\n                                    </div>\r\n\r\n                                </Fragment>\r\n                            ))}\r\n                        </div>\r\n                        <br/>\r\n                        <div className='form-row mt-3'>\r\n                            <div className=\"form-group col-sm-6 text-center\">\r\n                                <Button\r\n                                    type='submit'\r\n                                    onClick={() => handleAddFieldsText()}\r\n                                    className='btn-info w-100 shadow rounded'>Add paragraph</Button>\r\n                            </div>\r\n                            <div className=\"form-group col-sm-6 text-center\">\r\n                            <Button\r\n                                    type='submit'\r\n                                    onClick={() => handleAddFieldsTitle()}\r\n                                    className='btn-info w-100 shadow rounded'>Add Title</Button>\r\n                            </div>\r\n                        </div>\r\n<br/>\r\n                        <div>\r\n                            <div className=\"form-group w-100 text-center\">\r\n                                <Button\r\n                                    type='submit'\r\n                                    onClick={() => toPdf()}\r\n                                    className='btn-success w-100 shadow rounded'>Generate PDF</Button>\r\n                            </div>\r\n                            <div className='shadow rounded'>\r\n                                <div className=\"card-header bg-info text-white\">\r\n                                    Preview\r\n                                    <p style={{float: 'right'}}> This is a preview of the pdf file</p>\r\n                                </div>\r\n                                <div id='pdf'>\r\n                                    {inputFields.map((inputField, index) => (\r\n                                            inputField.title != null ? (\r\n                                                <>\r\n                                                    <br/><br/>\r\n                                                <h3 className='text-break  pl-4 pr-4 '><strong>{inputField.title}</strong></h3>\r\n                                                <br/>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                <p class=\"text-break pl-4 pr-4  \"> {inputField.text}</p>\r\n                                                    <br/>\r\n                                                </>\r\n                                                )\r\n                                        )\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                </form>\r\n\r\n            </>\r\n        );\r\n    }\r\n;\r\nexport default GeneratePdf;\r\n\r\n","// tools.js\r\nimport Embed from '@editorjs/embed'\r\nimport Table from '@editorjs/table'\r\nimport Paragraph from '@editorjs/paragraph'\r\nimport List from '@editorjs/list'\r\nimport Warning from '@editorjs/warning'\r\nimport LinkTool from '@editorjs/link'\r\nimport Image from '@editorjs/simple-image'\r\nimport Raw from '@editorjs/raw'\r\nimport Header from '@editorjs/header'\r\nimport Marker from \"@editorjs/marker\"\r\nimport CheckList from '@editorjs/checklist'\r\nimport Delimiter from '@editorjs/delimiter'\r\nimport InlineCode from '@editorjs/inline-code'\r\nimport ImageTool from '@editorjs/image'\r\n\r\nexport const EDITOR_JS_TOOLS = {\r\n    embed: {\r\n        class: Embed,\r\n        config: {\r\n            services: {\r\n                youtube: true,\r\n                coub: true,\r\n                Instagram: true,\r\n                Twitter: true\r\n            }\r\n        }\r\n    },\r\n    table: {\r\n        class: Table,\r\n        inlineToolbar: true\r\n    },\r\n    paragraph: {\r\n        class: Paragraph,\r\n        inlineToolbar: true\r\n    },\r\n    list: {\r\n        class: List,\r\n        inlineToolbar: true\r\n    },\r\n    warning: {\r\n        class: Warning,\r\n        inlineToolbar: true\r\n    },\r\n    linkTool: {\r\n        class: LinkTool,\r\n        config: {\r\n            endpoint: '/fetchUrl'\r\n        }\r\n    },\r\n    SimpleImage: {\r\n        class: Image,\r\n    },\r\n    image: {\r\n        class: ImageTool,\r\n        config: {\r\n            endpoints: {\r\n                byFile: '/uploadImage', // Your backend file uploader endpoint\r\n            }\r\n        },\r\n        inlineToolbar: true\r\n    },\r\n    raw: {\r\n        class: Raw,\r\n        inlineToolbar: true\r\n    },\r\n    header: {\r\n        class: Header,\r\n        inlineToolbar: true\r\n    },\r\n    marker: {\r\n        class: Marker,\r\n        inlineToolbar: true\r\n    },\r\n    checklist: {\r\n        class: CheckList,\r\n        inlineToolbar: true\r\n    },\r\n    delimiter: {\r\n        class: Delimiter,\r\n        inlineToolbar: true\r\n    },\r\n    inlineCode: {\r\n        class: InlineCode,\r\n        inlineToolbar: true\r\n    }\r\n}\r\n\r\n\r\n","// index.js\r\nimport EditorJs from \"react-editor-js\";\r\nimport React from \"react\";\r\nimport {EDITOR_JS_TOOLS} from \"./tools\";\r\n\r\n\r\nexport class Editor extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            name: '',\r\n            DocId: '',\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    readOnly = () => {\r\n\r\n        let editor = document.querySelectorAll(\".codex-editor__redactor\");\r\n        for (let i = 0; i < editor.length; i++) {\r\n            editor[i].style.padding = '0px';\r\n        }\r\n\r\n\r\n        let editable_elements = document.querySelectorAll(\"[contenteditable=true]\");\r\n        console.dir(editable_elements);\r\n        for (let i = 0; i < editable_elements.length; i++) {\r\n            console.log(editable_elements[i] + 'readOnly');\r\n            editable_elements[i].removeAttribute(\"contenteditable\");\r\n            editable_elements[i].tabIndex = 0;\r\n        }\r\n\r\n\r\n        let tool = document.querySelectorAll(\".ce-toolbar__content\");\r\n        for (let i = 0; i < tool.length; i++) {\r\n            tool[i].style.display = \"none\"\r\n        }\r\n\r\n        let tool2 = document.querySelectorAll(\".ce-toolbar\");\r\n        for (let i = 0; i < tool.length; i++) {\r\n            tool2[i].style.display = \"none\"\r\n            tool2[i].style.pointerEvents = \"none\";\r\n        }\r\n\r\n\r\n        let opentool = document.querySelectorAll(\".ce-toolbar--opened\");\r\n        for (let i = 0; i < tool.length; i++) {\r\n            if(opentool[i] != null)\r\n            opentool[i].style.display = \"none\";\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.readOnly();\r\n        try {\r\n            let res = await fetch('/openPage', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    category: this.props.category,\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                const res = result.data;\r\n                console.dir('Data from database : ' + res);\r\n                let data = JSON.parse(res[0].Data);\r\n                this.setState({\r\n                    DocId: res[0].DocId\r\n                });\r\n                this.setState({\r\n                    name: res[0].Name\r\n                });\r\n                console.log('Json data from database : ' + data);\r\n                this.setState({\r\n                    data: data\r\n                });\r\n\r\n            } else if (result && result.success === false) {\r\n                console.log(\"Could not open database\")\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    changeName = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n        console.log(this.state.name);\r\n        console.log(this.state.DocId);\r\n\r\n\r\n    }\r\n\r\n    onReady = () => {\r\n        // https://editorjs.io/configuration#editor-modifications-callback\r\n        console.log('Editor.js is ready to work!')\r\n        if (this.props.readOnly) {\r\n            setTimeout(this.readOnly, 1);\r\n        }\r\n    }\r\n\r\n    onChange = () => {\r\n        // https://editorjs.io/configuration#editor-modifications-callback\r\n        console.log(\"Now I know that Editor's content changed!\")\r\n        if (this.props.readOnly) {\r\n            setTimeout(this.readOnly, 1);\r\n        }\r\n    }\r\n    clear = () => {\r\n        this.editorInstance.clear();\r\n    }\r\n\r\n    async onSave() {\r\n        const outputData = await this.editorInstance.save();\r\n/////////////////////////////////// last edited på siden   av hvem ?  {JSON.parse(localStorage.getItem('user')).username}\r\n        try {\r\n            let res = await fetch('/saveExistingPage', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    data: JSON.stringify(outputData),\r\n                    id: this.state.DocId\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                alert(\"Saved in database\");\r\n                console.log(\"Saved to database\")\r\n\r\n            } else if (result && result.success === false) {\r\n                console.log(\"Did not save to database\")\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        console.log('Article data: ', outputData)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.readOnly) {\r\n            setTimeout(this.readOnly, 1000);\r\n        }\r\n        return <><div className='form-row ' style={{  'background-color': '#e9ebee'}}>\r\n            {this.props.readOnly ? (\r\n                null\r\n            ) : (\r\n                <>\r\n                <div className='col-md-12 p-0 bg-info'>\r\n                    <button onClick={this.onSave.bind(this)} type=\"button\" className='btn btn-info float-right m-2'> Save\r\n                    </button>\r\n                    <button onClick={this.clear} type=\"button\" className='btn btn-info float-right m-2'> Clear</button>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control w-25 m-2\"\r\n                        id=\"pageName\"\r\n                        name=\"pageName\"\r\n                        placeholder=\"Enter page name\"\r\n                        value={this.state.name}\r\n                        onChange={event => this.changeName(event)}\r\n                    />\r\n                </div>\r\n                </>\r\n            )\r\n            }\r\n            </div>\r\n            <div className=' form-row' style={{  'background-color': '#e9ebee'}}>\r\n            <div className='col-md-12 p-0'>\r\n            <EditorJs\r\n                autofocus={true}\r\n                data={this.state.data}\r\n                enableReInitialize={true}\r\n                onReady={this.onReady}\r\n                onChange={this.onChange}\r\n                instanceRef={instance => this.editorInstance = instance}\r\n                tools={EDITOR_JS_TOOLS}>\r\n            </EditorJs>\r\n            </div>\r\n            </div>\r\n            </>\r\n    }\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Editor} from \"../Editor/Editor\";\r\n\r\nexport class AccessibleMobile extends Component {\r\n    render() {\r\n        let user = localStorage.getItem('user');\r\n        if (user !== null) {\r\n            return <><Editor category='mainaccessiblemobile' readOnly={false}/>\r\n            </>\r\n        }\r\n        else {\r\n            return  <><Editor category='mainaccessiblemobile' readOnly={true}/>\r\n            </>\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Editor} from \"../Editor/Editor\";\r\n\r\nexport class AccesibleDocuments extends Component {\r\n    render() {\r\n        let user = localStorage.getItem('user');\r\n        if (user !== null) {\r\n            return <><Editor category='mainaccessibledocument' readOnly={false}/>\r\n            </>\r\n        }\r\n        else {\r\n            return  <><Editor category='mainaccessibledocument' readOnly={true}/>\r\n            </>\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Editor} from \"../Editor/Editor\";\r\n\r\nexport class AccessibleWeb extends Component {\r\n    render() {\r\n        let user = localStorage.getItem('user');\r\n        if (user !== null) {\r\n            return <><Editor category='mainaccessibleweb' readOnly={false}/>\r\n            </>\r\n        }\r\n        else {\r\n            return  <><Editor category='mainaccessibleweb' readOnly={true}/>\r\n            </>\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Editor} from \"../Editor/Editor\";\r\n\r\nexport class AccessibleKiosk extends Component {\r\n    render() {\r\n        let user = localStorage.getItem('user');\r\n        if (user !== null) {\r\n            return <><Editor category='mainaccessiblekiosk' readOnly={false}/>\r\n            </>\r\n        }\r\n        else {\r\n            return  <><Editor category='mainaccessiblekiosk' readOnly={true}/>\r\n            </>\r\n        }\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nclass InputField extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    value={this.props.value}\r\n                    onChange={(e) => this.props.onChange(e.target.value)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default InputField;","import React, {Component} from 'react';\r\nimport InputField from \"../LoginComponents/InputField\";\r\nimport UserStores from \"../../stores/UserStores\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 12) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n\r\n    async doLogin() {\r\n        if (!this.state.username) {\r\n            return;\r\n        }\r\n        if (!this.state.password) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n        try {\r\n\r\n            let res = await fetch('/Trylogin', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserStores.loading = false;\r\n                UserStores.isLoggedIn = true;\r\n                UserStores.username = result.username;\r\n                localStorage.setItem('user', JSON.stringify(UserStores));\r\n                window.location.reload(false);\r\n            } else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div className='shadow rounded bg-light w-100 m-auto  border'>\r\n            <Form className='w-100 p-4  my-auto  w-100'>\r\n            <div className=' w-100 '>\r\n            <h3 className='m-auto'>Log in</h3>\r\n            <div className=\"form-group  m-auto\">\r\n                <br/>\r\n                <label className='w-100'> Username\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange={(val) => this.setInputValue('username', val)}\r\n                /></label>\r\n            </div>\r\n            <div className=\"form-group  m-auto\">\r\n                <br/>\r\n                <label className='w-100'> Password\r\n                <InputField\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={(val) => this.setInputValue('password', val)}\r\n                />\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group m-auto\">\r\n                <br/>\r\n                <Button\r\n                    type='submit'\r\n                    disabled={this.state.buttonDisabled}\r\n                    onClick={() => this.doLogin()}\r\n                    className='btn-info  m-auto'>Login</Button>\r\n            </div>\r\n            </div>\r\n        </Form>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default LoginForm;","import React, {Component} from \"react\";\r\nimport LoginForm from \"../LoginComponents/LoginForm\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n        if(user !== null) {\r\n            if (JSON.parse(localStorage.getItem('user')).loading) {\r\n                return (\r\n                    <div className=\"container\">\r\n                        Loading, please wait....\r\n                    </div>\r\n                );\r\n            } else {\r\n                if (JSON.parse(localStorage.getItem('user')).isLoggedIn) {\r\n                    return (\r\n                        <Redirect to=\"/\" />\r\n                    );\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n            return (\r\n                <div className=\"col-sm-6 mx-auto mt-5\">\r\n                    <LoginForm />\r\n                </div>\r\n            );\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\nexport default Login;","import React, {Component} from \"react\";\r\nimport {Editor} from \"./Editor/Editor\";\r\n\r\nexport class LawsAndRegulations extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let user = localStorage.getItem('user');\r\n        if (user !== null) {\r\n            return <><Editor category='mainlawsandregulations' readOnly={false}/>\r\n            </>\r\n        }\r\n        else {\r\n            return  <><Editor category='mainlawsandregulations' readOnly={true}/>\r\n            </>\r\n        }\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\nimport {Editor} from \"./Editor/Editor\";\r\n\r\nexport class OnlineCourses extends Component {\r\n\r\n    render() {\r\n        let user = localStorage.getItem('user');\r\n        if (user !== null) {\r\n            return <><Editor category='mainonlinecourses' readOnly={false}/>\r\n            </>\r\n        }\r\n        else {\r\n            return  <><Editor category='mainonlinecourses' readOnly={true}/>\r\n            </>\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Editor} from \"./Editor/Editor\";\r\n\r\nexport class Home extends Component {\r\n\r\n    render() {\r\n        let user = localStorage.getItem('user');\r\n        if (user !== null) {\r\n            return <Editor category='Home' readOnly={false}/>\r\n        }\r\n        else {\r\n            return <Editor category='Home' readOnly={true}/>\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Editor} from \"./Editor/Editor\";\r\n\r\nexport class AboutUs extends Component {\r\n\r\n    render() {\r\n        let user = localStorage.getItem('user');\r\n        if (user !== null) {\r\n            return <Editor category='Aboutus' readOnly={false}/>\r\n        }\r\n        else {\r\n            return <Editor category='Aboutus' readOnly={true}/>\r\n        }\r\n    }\r\n}","// index.js\r\nimport EditorJs from \"react-editor-js\";\r\nimport React from \"react\";\r\n\r\nimport {EDITOR_JS_TOOLS} from \"./tools\";\r\n\r\nexport class EditorPages extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            name: '',\r\n            DocId: '',\r\n        }\r\n        this.goBack = this.goBack.bind(this);\r\n    }\r\n\r\n\r\n\r\n    readOnly() {\r\n\r\n        let editor = document.querySelectorAll(\".codex-editor__redactor\");\r\n        for (let i = 0; i < editor.length; i++) {\r\n            editor[i].style.padding = '0px';\r\n        }\r\n\r\n\r\n\r\n        let editable_elements = document.querySelectorAll(\"[contenteditable=true]\");\r\n        console.dir(editable_elements);\r\n        for (let i = 0; i < editable_elements.length; i++) {\r\n            console.log(editable_elements[i] + 'readOnly');\r\n            editable_elements[i].removeAttribute(\"contenteditable\");\r\n            editable_elements[i].tabIndex = 0;\r\n        }\r\n\r\n\r\n        let tool = document.querySelectorAll(\".ce-toolbar__content\");\r\n        for (let i = 0; i < tool.length; i++) {\r\n            tool[i].style.display = \"none\"\r\n        }\r\n\r\n        let tool2 = document.querySelectorAll(\".ce-toolbar\");\r\n        for (let i = 0; i < tool.length; i++) {\r\n            tool2[i].style.display = \"none\"\r\n            tool2[i].style.pointerEvents = \"none\";\r\n        }\r\n\r\n\r\n        let opentool = document.querySelectorAll(\".ce-toolbar--opened\");\r\n        for (let i = 0; i < tool.length; i++) {\r\n            opentool[i].style.display = \"none\"\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.readOnly();\r\n        const {params} = this.props.match;\r\n        try {\r\n            let res = await fetch('/openPageById', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    id: params.docId,\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                const res = result.data;\r\n                console.dir('Data from database : '+res);\r\n                let data = JSON.parse(res[0].Data);\r\n                this.setState({\r\n                    DocId: res[0].DocId\r\n                });\r\n                this.setState({\r\n                    name: res[0].Name\r\n                });\r\n                console.log('Json data from database : ' + data);\r\n                this.setState({\r\n                    data: data\r\n                });\r\n\r\n            } else if (result && result.success === false) {\r\n                console.log(\"Could not open database\")\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    changeName = (event) => {\r\n        this.setState({\r\n            name:  event.target.value\r\n        })\r\n        console.log(this.state.name);\r\n        console.log(this.state.DocId);\r\n\r\n\r\n    }\r\n\r\n    onReady = () => {\r\n        // https://editorjs.io/configuration#editor-modifications-callback\r\n        console.log('Editor.js is ready to work!')\r\n        if (this.props.readOnly) {\r\n            setTimeout(this.readOnly, 1);\r\n        }\r\n    }\r\n\r\n    onChange = () => {\r\n        // https://editorjs.io/configuration#editor-modifications-callback\r\n        console.log(\"Now I know that Editor's content changed!\")\r\n        if (this.props.readOnly) {\r\n            setTimeout(this.readOnly, 1);\r\n        }\r\n    }\r\n    clear = () => {\r\n        this.editorInstance.clear();\r\n    }\r\n\r\n    async onSave() {\r\n        const outputData = await this.editorInstance.save();\r\n/////////////////////////////////// last edited på siden   av hvem ?  {JSON.parse(localStorage.getItem('user')).username}\r\n        try {\r\n            let res = await fetch('/saveExistingPage', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    data: JSON.stringify(outputData),\r\n                    id: this.state.DocId\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                alert(\"Saved in database\");\r\n                console.log(\"Saved to database\");\r\n                this.goBack();\r\n\r\n            } else if (result && result.success === false) {\r\n                console.log(\"Did not save to database\")\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        console.log('Article data: ', outputData)\r\n    }\r\n\r\n    goBack(){\r\n        let path = window.location.pathname.split('/');\r\n        this.props.history.push('/'+path[1]);    }\r\n\r\n    render() {\r\n        if (localStorage.getItem('user') == null) {\r\n            setTimeout(this.readOnly, 1000);\r\n        }\r\n        return <div  className='shadow rounded bg-light'>\r\n            {localStorage.getItem('user') == null ? (\r\n                <div className='col-sm-12 bg-info p-0'>\r\n                    <button onClick={this.goBack} type=\"button\" className='btn btn-info '><i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n            ) : (\r\n                <div className='col-sm-12 bg-info p-0'>\r\n                    <button onClick={this.goBack} type=\"button\" className='btn btn-info '><i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button>\r\n                    <button onClick={this.onSave.bind(this)} type=\"button\" className='btn btn-info float-right '> Save </button>\r\n                    <button onClick={this.clear} type=\"button\" className='btn btn-info float-right'> Clear </button>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"pageName\"\r\n                        name=\"pageName\"\r\n                        placeholder=\"Enter page name\"\r\n                        value={this.state.name}\r\n                        onChange={event => this.changeName(event)}\r\n                    />\r\n                </div>\r\n            )\r\n            }\r\n\r\n\r\n            <EditorJs\r\n                autofocus={true}\r\n                data={this.state.data}\r\n                enableReInitialize={true}\r\n                onReady={this.onReady}\r\n                onChange={this.onChange}\r\n                instanceRef={instance => this.editorInstance = instance}\r\n                tools={EDITOR_JS_TOOLS}>\r\n            </EditorJs>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n","// index.js\r\nimport EditorJs from \"react-editor-js\";\r\nimport React from \"react\";\r\nimport {EDITOR_JS_TOOLS} from \"./tools\";\r\n\r\nexport class EditorNewPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n        }\r\n        this.goBack = this.goBack.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    changeName = (event) => {\r\n        this.setState({\r\n            name:  event.target.value\r\n        })\r\n    }\r\n\r\n    onReady = () => {\r\n        // https://editorjs.io/configuration#editor-modifications-callback\r\n        console.log('Editor.js is ready to work!')\r\n        if (this.props.readOnly) {\r\n            setTimeout(this.readOnly, 1000);\r\n        }\r\n    }\r\n\r\n    onChange = () => {\r\n        // https://editorjs.io/configuration#editor-modifications-callback\r\n        console.log(\"Now I know that Editor's content changed!\")\r\n        if (this.props.readOnly) {\r\n            setTimeout(this.readOnly, 1000);\r\n        }\r\n    }\r\n\r\n    clear = () => {\r\n        this.editorInstance.clear();\r\n    }\r\n\r\n    async onSave() {\r\n        const outputData = await this.editorInstance.save();\r\n        const {params} = this.props.match;\r\n\r\n/////////////////////////////////// last edited på siden   av hvem ?  {JSON.parse(localStorage.getItem('user')).username}\r\n        try {\r\n            let res = await fetch('/savePage', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    category: params.id,\r\n                    data: JSON.stringify(outputData)\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                alert(\"Saved in database\");\r\n                console.log(\"Saved in database\")\r\n                this.goBack();\r\n\r\n            } else if (result && result.success === false) {\r\n                console.log(\"Did not save to database\")\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        console.log('Article data: ', outputData)\r\n    }\r\n\r\n    goBack(){\r\n        let path = window.location.pathname.split('/');\r\n        this.props.history.push('/'+path[1]);    }\r\n\r\n    render() {\r\n\r\n        let user = localStorage.getItem('user');\r\n        if (user === null) {\r\n            setTimeout(this.readOnly, 100);\r\n        }\r\n        return <div  className='shadow rounded bg-light'>\r\n            {user === null ? (\r\n                null\r\n        ) : (\r\n                <div className='col-sm-12 bg-info p-0'>\r\n                    <button onClick={this.goBack} type=\"button\" className='btn btn-info '><i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button>\r\n                    <button onClick={this.onSave.bind(this)} type=\"button\" className='btn btn-info float-right '> Save </button>\r\n                    <button onClick={this.clear} type=\"button\" className='btn btn-info float-right'> Clear </button>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"pageName\"\r\n                        name=\"pageName\"\r\n                        placeholder=\"Enter page name\"\r\n                        value={this.state.name}\r\n                        onChange={event => this.changeName(event)}\r\n                    />\r\n                </div>\r\n            )\r\n            }\r\n\r\n\r\n            <EditorJs\r\n                autofocus={true}\r\n                enableReInitialize={true}\r\n                onReady={this.onReady}\r\n                onChange={this.onChange}\r\n                instanceRef={instance => this.editorInstance = instance}\r\n                tools={EDITOR_JS_TOOLS}>\r\n            </EditorJs>\r\n        </div>\r\n    }\r\n}\r\n\r\n","import React, {PureComponent} from \"react\";\r\nimport throttle from \"lodash.throttle\";\r\nimport {Document, Page, pdfjs} from \"react-pdf\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n\r\nclass PdfViewer extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {width: null};\r\n        this.throttledSetDivSize = throttle(this.setDivSize, 500);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDivSize()\r\n        window.addEventListener(\"resize\", this.throttledSetDivSize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.throttledSetDivSize)\r\n    }\r\n\r\n    setDivSize = () => {\r\n        this.setState({width: this.pdfWrapper.getBoundingClientRect().width})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {params} = this.props.match;\r\n        let file = '/Files/' + params.id;\r\n\r\n        return (\r\n            <div>\r\n                <div className='form-row bg-light '>\r\n                    <div id=\"row\" style={{height: \"100%\", width: \"100%\", display: \"flex\", overflow: \"hidden\"}}>\r\n                        <div id=\"pdfWrapper\" style={{width: \"100%\", height: 'auto'}}\r\n                             ref={(ref) => this.pdfWrapper = ref}>\r\n                            <PdfComponent wrapperDivSize={this.state.width} file={file} history={this.props.history}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nclass PdfComponent extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            numPages: null,\r\n            pageNumber: 1,\r\n        }\r\n        this.goBack = this.goBack.bind(this);\r\n    }\r\n\r\n    onDocumentLoadSuccess = ({numPages}) => {\r\n        this.setState({numPages});\r\n    }\r\n\r\n    changePage = offset => this.setState(prevState => ({\r\n        pageNumber: prevState.pageNumber + offset,\r\n    }));\r\n\r\n    previousPage = () => this.changePage(-1);\r\n\r\n    nextPage = () => this.changePage(1);\r\n\r\n    goBack() {\r\n        let path = window.location.pathname.split('/');\r\n        this.props.history.push('/' + path[1]);\r\n    }\r\n\r\n    render() {\r\n        const {pageNumber, numPages} = this.state;\r\n        return (<div>\r\n            <div className='form-row bg-info'>\r\n                <div className=\"col-sm-12 text-white\">\r\n\r\n                    <label className='m-0'>\r\n                        <button onClick={this.goBack} type=\"button\" className='btn btn-info  text-white '><i\r\n                            className=\"fa fa-arrow-left \" aria-hidden=\"true\"> </i></button>\r\n                    </label>\r\n\r\n                    <label className='m-0 mx-auto'>\r\n\r\n                    <Button className='btn btn-info  text-white'\r\n                            onClick={this.previousPage}\r\n                            disabled={pageNumber <= 1}><i className=\"fa fa-angle-double-left\"></i></Button>\r\n\r\n                    {pageNumber} of {numPages}\r\n\r\n                    <Button className='btn btn-info  text-white'\r\n                            onClick={this.nextPage}\r\n                            disabled={pageNumber >= numPages}><i className=\"fa fa-angle-double-right\"></i></Button>\r\n                    </label>\r\n\r\n\r\n                    <a className='btn-info btn  text-white float-right' href={this.props.file} download>\r\n                        <i className=\"fa fa-download\" aria-hidden=\"true\"></i></a>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className='form-row bg-info'>\r\n                <div className=\" col-sm-12 text-center\">\r\n                </div>\r\n            </div>\r\n            <Document file={this.props.file} onLoadSuccess={this.onDocumentLoadSuccess}>\r\n                <Page pageIndex={pageNumber} pageNumber={pageNumber} width={this.props.wrapperDivSize}/>\r\n            </Document>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default PdfViewer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport {observer} from \"mobx-react\";\nimport UserStores from \"./stores/UserStores\";\nimport {Header} from \"./components/LayoutComponents/Header\";\nimport Navigation from \"./components/LayoutComponents/Navigation\";\nimport Sidebar from \"./components/LayoutComponents/Sidebar\";\nimport {BrowserRouter, Route, Switch,} from \"react-router-dom\";\nimport {Footer} from \"./components/LayoutComponents/Footer\";\nimport GeneratePdf from \"./components/PageComponents/EditableLayer/GeneratePdf\";\nimport {AccessibleMobile} from \"./components/PageComponents/items/AccessibleMobile\";\nimport {AccesibleDocuments} from \"./components/PageComponents/items/AccesibleDocuments\";\nimport {AccessibleWeb} from \"./components/PageComponents/items/AccessibleWeb\";\nimport {AccessibleKiosk} from \"./components/PageComponents/items/AccessibleKiosk\";\nimport Login from \"./components/PageComponents/Login\";\nimport {LawsAndRegulations} from \"./components/PageComponents/LawsAndRegulations\";\nimport {OnlineCourses} from \"./components/PageComponents/OnlineCourses\";\nimport {Home} from \"./components/PageComponents/Home\";\nimport {AboutUs} from \"./components/PageComponents/AboutUs\";\nimport {EditorPages} from \"./components/PageComponents/Editor/EditorPages\";\nimport {EditorNewPage} from \"./components/PageComponents/Editor/EditorNewPage\";\nimport PdfViewer from \"./components/PageComponents/EditableLayer/PdfViewer\";\n\nlet path = null;\n\nclass App extends Component {\n\n\n    async componentDidMount() {\n        path = window.location.pathname;\n\n\n        try {\n            let res = await fetch('/isLoggedIn', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n            let result = await res.json();\n\n            if (result && result.success) {\n                UserStores.loading = false;\n                UserStores.isLoggedIn = true;\n                UserStores.username = result.username;\n                localStorage.setItem('user', JSON.stringify(UserStores));\n            } else {\n                localStorage.removeItem('user');\n                console.log(\"Ikke logget in\");\n\n            }\n        } catch (e) {\n            localStorage.removeItem('user');\n            console.log(e);\n        }\n    }\n\n    render() {\n\n        return (<BrowserRouter>\n                <Header />\n                <Navigation parentMethod={this.doLogout} user={UserStores}/>\n                <div className=\"container-fluid h-auto\">\n\n                    {\n                        window.location.pathname === '/' || window.location.pathname === '/aboutus' || window.location.pathname === '/login' ? (\n                            <div className=\"row content h-auto\">\n                                <div className=\"col-md-12 \">\n                                    <Switch>\n                                        <Route exact path=\"/\" render={(props) => <Home {...props} user={UserStores}/>}/>\n                                        <Route path=\"/onlinecourses\"\n                                               render={(props) => <OnlineCourses {...props} user={UserStores}/>}/>\n                                        <Route path=\"/lawsAndRegulations\"\n                                               render={(props) => <LawsAndRegulations {...props} user={UserStores}/>}/>\n                                        <Route path=\"/login\" render={(props) => <Login {...props} user={UserStores}/>}/>\n                                        <Route path=\"/accessiblekiosk\"\n                                               render={(props) => <AccessibleKiosk {...props} user={UserStores}/>}/>\n                                        <Route path=\"/accessibledocuments\"\n                                               render={(props) => <AccesibleDocuments {...props} user={UserStores}/>}/>\n                                        <Route path=\"/accessibleweb\"\n                                               render={(props) => <AccessibleWeb {...props} user={UserStores}/>}/>\n                                        <Route path=\"/accessiblemobile\"\n                                               render={(props) => <AccessibleMobile {...props} user={UserStores}/>}/>\n                                        <Route path=\"/aboutus\"\n                                               render={(props) => <AboutUs {...props} user={UserStores}/>}/>\n                                        <Route path=\"/pdf/:id\" component={PdfViewer}/>\n                                        <Route path=\"/addPdf/:id\" component={GeneratePdf}/>\n\n                                    </Switch>\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"row content h-auto\">\n                                <Sidebar/>\n                                <div className=\"col-md-10 mt-3 order-1\">\n                                    <Switch>\n                                        <Route exact path=\"/\" render={(props) => <Home {...props} user={UserStores}/>}/>\n\n                                        //Main routers\n                                        <Route exact path=\"/onlinecourses/\"\n                                               render={(props) => <OnlineCourses {...props} user={UserStores}/>}/>\n                                        <Route exact path=\"/lawsAndRegulations/\"\n                                               render={(props) => <LawsAndRegulations {...props} user={UserStores}/>}/>\n                                        <Route exact path=\"/accessiblekiosk/\"\n                                               render={(props) => <AccessibleKiosk {...props} user={UserStores}/>}/>\n                                        <Route exact path=\"/accessibledocuments/\"\n                                               render={(props) => <AccesibleDocuments {...props} user={UserStores}/>}/>\n                                        <Route exact path=\"/accessibleweb/\"\n                                               render={(props) => <AccessibleWeb {...props} user={UserStores}/>}/>\n                                        <Route exact path=\"/accessiblemobile/\"\n                                               render={(props) => <AccessibleMobile {...props} user={UserStores}/>}/>\n                                        <Route path=\"/login\" render={(props) => <Login {...props} user={UserStores}/>}/>\n                                        <Route path=\"/aboutus\"\n                                               render={(props) => <AboutUs {...props} user={UserStores}/>}/>\n\n                                        <Route path=\"/:id/page/:docId/\" component={EditorPages}/>\n                                        <Route exact path=\"/:id/newPage/\"  component={EditorNewPage}/>\n                                        <Route path=\"/:id/pdf/:id/\" component={PdfViewer}/>\n                                        <Route path=\"/:id/addPdf/\" component={GeneratePdf}/>\n\n                                    </Switch>\n                                </div>\n                            </div>\n                        )\n                    }\n\n                </div>\n                <br/><br/><br/>\n                <Footer/>\n            </BrowserRouter>\n        );\n    }\n\n}\n\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-svg-core'\nimport '@fortawesome/free-solid-svg-icons'\n\nReactDOM.render(\n    <App />\n,  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 59;"],"sourceRoot":""}